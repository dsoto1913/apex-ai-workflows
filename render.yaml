# render.yaml
services:
  # 1) our n8n front‑end on Render
  - type: web
    name: apex‑ai‑n8n
    env: docker
    plan: free
    region: oregon
    dockerfilePath: ./Dockerfile
    # optional health check so Render knows when your container is ready
    healthCheckPath: /
    envVars:
      - key: N8N_HOST
        value: apex‑ai‑n8n.onrender.com
      - key: N8N_PORT
        value: "5678"
      - key: N8N_PROTOCOL
        value: https
      - key: NODE_ENV
        value: production
      - key: WEBHOOK_URL
        value: https://apex‑ai‑n8n.onrender.com
      - key: TWILIO_ACCOUNT_SID
        sync: false
      - key: TWILIO_AUTH_TOKEN
        sync: false
      - key: REDIS_URL
        fromService:
          type: redis
          name: apex‑ai‑redis
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: ELEVENLABS_API_KEY
        sync: false
      - key: DEEPGRAM_API_KEY
        sync: false
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false
      - key: SMTP_HOST
        value: smtp.gmail.com
      - key: SMTP_PORT
        value: "465"
      - key: SMTP_SECURE
        value: "true"
      - key: SMTP_USER
        sync: false
      - key: SMTP_PASS
        sync: false

  # 2) a free Redis to back your prompt & call‑history store
  - type: redis
    name: apex‑ai‑redis
    plan: free
    region: oregon

